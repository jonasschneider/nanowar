// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Cell, Entity, Fleet, SendFleetCommand;
    Cell = require('nanowar/models/Cell');
    Fleet = require('nanowar/models/Fleet');
    Entity = require('nanowar/models/Entity');
    return SendFleetCommand = (function(_super) {

      __extends(SendFleetCommand, _super);

      function SendFleetCommand() {
        return SendFleetCommand.__super__.constructor.apply(this, arguments);
      }

      SendFleetCommand.prototype.relationSpecs = {
        from: {
          relatedModel: Cell,
          directory: 'game.entities'
        },
        to: {
          relatedModel: Cell,
          directory: 'game.entities'
        }
      };

      SendFleetCommand.prototype.initialize = function() {};

      SendFleetCommand.prototype.run = function() {
        var fleet;
        fleet = new Fleet({
          from: this.get('from'),
          to: this.get('to'),
          game: this.game
        });
        if (fleet.launch()) {
          return this.game.entities.add(fleet);
        }
      };

      return SendFleetCommand;

    })(Entity);
  });

}).call(this);
