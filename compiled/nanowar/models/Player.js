// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Entity, Player;
    Entity = require('./Entity');
    return Player = (function(_super) {

      __extends(Player, _super);

      function Player() {
        return Player.__super__.constructor.apply(this, arguments);
      }

      Player.prototype.colors = ["red", "blue", "green", "yellow"];

      Player.prototype.defaults = {
        name: 'anonymous coward'
      };

      Player.prototype.initialize = function() {
        return this.bind('add', function() {
          if (!this.get('color')) {
            return this.set({
              color: this.colors[this.game.getPlayers().length - 1]
            }, {
              silent: true
            });
          }
        });
      };

      Player.prototype.toString = function() {
        if (this.get('name')) {
          return "[object Player '" + (this.get('name')) + "']";
        } else {
          return Player.__super__.toString.apply(this, arguments);
        }
      };

      return Player;

    })(Entity);
  });

}).call(this);
