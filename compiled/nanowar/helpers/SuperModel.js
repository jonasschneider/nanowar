// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Backbone, SuperModel;
    Backbone = require('backbone');
    return SuperModel = (function(_super) {

      __extends(SuperModel, _super);

      SuperModel.getType = function() {
        return this.toString().match(/^function (.*)\(\)/)[1];
      };

      function SuperModel(attributes) {
        var nameGiver, type;
        attributes || (attributes = {});
        nameGiver = this.__proto__;
        while ((nameGiver.anonymousSubclass != null) && nameGiver.anonymousSubclass) {
          nameGiver = nameGiver.__proto__;
        }
        type = nameGiver.constructor.toString().match(/^function (.*)\(/)[1];
        nameGiver.type = type;
        if (attributes.type && attributes.type !== type) {
          throw "Tried to initialize a " + type + " with type set to " + attributes.type;
        }
        attributes.type = type;
        SuperModel.__super__.constructor.call(this, attributes);
        this._previousAttributes.type = type;
      }

      SuperModel.prototype.toString = function() {
        return "[object " + this.type + "]";
      };

      return SuperModel;

    })(Backbone.Model);
  });

}).call(this);
