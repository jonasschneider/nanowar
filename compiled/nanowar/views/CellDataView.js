// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Backbone, CellDataView;
    Backbone = require('backbone');
    return CellDataView = (function(_super) {

      __extends(CellDataView, _super);

      function CellDataView() {
        return CellDataView.__super__.constructor.apply(this, arguments);
      }

      CellDataView.prototype.initialize = function(options) {
        var _this = this;
        this.gameView = options.gameView;
        this.cellView = options.cellView;
        this.model.bind('change', this.render, this);
        this.el = this.gameView.paper.text(this.model.get('x'), this.model.get('y'), "0");
        this.el.attr({
          font: '12px Arial',
          stroke: 'none',
          fill: 'white'
        });
        setInterval(_(this.render).bind(this), 400);
        return $(this.el.node).click(function() {
          return _this.cellView.trigger('click');
        });
      };

      CellDataView.prototype.render = function() {
        this.el.attr({
          text: this.model.getCurrentStrength()
        });
        return this;
      };

      return CellDataView;

    })(Backbone.View);
  });

}).call(this);
